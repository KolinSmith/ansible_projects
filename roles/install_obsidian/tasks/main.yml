---
# Install Obsidian from official download

- name: Detect system architecture
  command: dpkg --print-architecture
  register: system_architecture
  changed_when: false
  tags: ['obsidian', 'detect']

- name: Set architecture mapping for Obsidian downloads
  set_fact:
    obsidian_arch: "{{ arch_mapping[system_architecture.stdout] | default(system_architecture.stdout) }}"
  vars:
    arch_mapping:
      amd64: "amd64"
      arm64: "arm64" 
      armhf: "armhf"
  tags: ['obsidian', 'detect']

- name: Display detected architecture
  debug:
    msg: 
      - "System architecture: {{ system_architecture.stdout }}"
      - "Obsidian package architecture: {{ obsidian_arch }}"
      - "Will download: obsidian_{{ obsidian_version }}_{{ obsidian_arch }}.deb"
  tags: ['obsidian', 'detect']

- name: Set Obsidian download URL based on architecture
  set_fact:
    obsidian_download_url: "https://github.com/obsidianmd/obsidian-releases/releases/download/v{{ obsidian_version }}/obsidian_{{ obsidian_version }}_{{ obsidian_arch }}.deb"
  tags: ['obsidian', 'detect']

- name: Check if Obsidian is already installed
  command: which obsidian
  register: obsidian_check
  failed_when: false
  changed_when: false
  tags: ['obsidian', 'check']

- name: Display installation status
  debug:
    msg: "Obsidian is already installed, skipping download"
  when: obsidian_check.rc == 0
  tags: ['obsidian', 'check']

- name: Download Obsidian .deb package
  get_url:
    url: "{{ obsidian_download_url }}"
    dest: "/tmp/obsidian_{{ obsidian_version }}_{{ obsidian_arch }}.deb"
    timeout: 120
    force: "{{ obsidian_force_download | default(false) }}"
  when: obsidian_check.rc != 0
  tags: ['obsidian', 'download']

- name: Install Obsidian from .deb package
  apt:
    deb: "/tmp/obsidian_{{ obsidian_version }}_{{ obsidian_arch }}.deb"
    state: present
  become: yes
  when: obsidian_check.rc != 0
  notify: update desktop database
  tags: ['obsidian', 'install']

- name: Clean up downloaded .deb package
  file:
    path: "/tmp/obsidian_{{ obsidian_version }}_{{ obsidian_arch }}.deb"
    state: absent
  tags: ['obsidian', 'cleanup']

- name: Clone Obsidian vault from GitHub
  git:
    repo: "{{ obsidian_vault_git_repo }}"
    dest: "{{ obsidian_vault_path }}"
    version: "{{ obsidian_vault_git_branch | default('main') }}"
    force: "{{ obsidian_vault_git_force | default(false) }}"
  become_user: "{{ obsidian_user }}"
  become: yes
  when: obsidian_vault_git_repo is defined
  tags: ['obsidian', 'sync', 'git']

- name: Ensure .gitignore exists for vault
  copy:
    content: |
      # Obsidian workspace files
      .obsidian/workspace.json
      .obsidian/workspace-mobile.json
      .obsidian/cache/
      .trash/
    dest: "{{ obsidian_vault_path }}/.gitignore"
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
    mode: '0644'
    force: no
  become: yes
  when: obsidian_vault_git_repo is defined
  tags: ['obsidian', 'git']

- name: Create cron job to sync vault to Git repository nightly
  cron:
    name: "Obsidian vault Git sync"
    minute: "{{ obsidian_git_sync_minute | default('0') }}"
    hour: "{{ obsidian_git_sync_hour | default('4') }}"
    day: "*"
    month: "*"
    weekday: "*"
    user: "{{ obsidian_user }}"
    job: 'cd {{ obsidian_vault_path }} && git add . && git diff --staged --quiet || (git commit -m "Nightly auto-sync: $(date +\%Y-\%m-\%d)" && git push origin {{ obsidian_vault_git_branch | default("main") }}) 2>/dev/null'
    state: present
  become: yes
  when: 
    - obsidian_vault_git_repo is defined
    - obsidian_auto_git_sync | default(true)
  tags: ['obsidian', 'git', 'cron']

- name: Create default vault directory (for new vaults only)
  file:
    path: "{{ obsidian_vault_path }}"
    state: directory
    mode: '0755'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
  become: yes
  when: 
    - obsidian_create_vault
    - obsidian_vault_git_repo is not defined
  tags: ['obsidian', 'vault']

- name: Create Obsidian .obsidian config directory in vault
  file:
    path: "{{ obsidian_vault_path }}/.obsidian"
    state: directory
    mode: '0755'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
  become: yes
  when: obsidian_vault_git_repo is not defined
  tags: ['obsidian', 'vault']

- name: Create Obsidian app config directory
  file:
    path: "/home/{{ obsidian_user }}/.config/obsidian"
    state: directory
    mode: '0755'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
  become: yes
  when: obsidian_create_config
  tags: ['obsidian', 'config']

- name: Create Obsidian app configuration
  template:
    src: obsidian.json.j2
    dest: "/home/{{ obsidian_user }}/.config/obsidian/obsidian.json"
    mode: '0644'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
    backup: yes
  become: yes
  when: obsidian_create_config
  tags: ['obsidian', 'config']

- name: Create vault app.json configuration (for new vaults only)
  template:
    src: app.json.j2
    dest: "{{ obsidian_vault_path }}/.obsidian/app.json"
    mode: '0644'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
    force: no
  become: yes
  when: 
    - obsidian_create_vault_config
    - obsidian_vault_git_repo is not defined
  tags: ['obsidian', 'vault']

- name: Create initial workspace (for new vaults only)
  template:
    src: workspace.json.j2
    dest: "{{ obsidian_vault_path }}/.obsidian/workspace.json"
    mode: '0644'
    owner: "{{ obsidian_user }}"
    group: "{{ obsidian_user }}"
    force: no
  become: yes
  when: 
    - obsidian_create_default_workspace
    - obsidian_vault_git_repo is not defined
  tags: ['obsidian', 'workspace']

# - name: Create welcome note (for new vaults only)
#   copy:
#     content: |
#       # Welcome to Obsidian
      
#       This vault was set up automatically on {{ ansible_date_time.iso8601 }}.
      
#       ## Getting Started
#       - Press `Ctrl+N` to create a new note
#       - Use `[[Note Name]]` to link between notes
#       - Press `Ctrl+O` to quickly switch between notes
      
#       Happy note-taking! üìù
#     dest: "{{ obsidian_vault_path }}/Welcome.md"
#     mode: '0644'
#     owner: "{{ obsidian_user }}"
#     group: "{{ obsidian_user }}"
#     force: no
#   become: yes
#   when: 
#     - obsidian_create_vault
#     - obsidian_create_welcome_note
#     - obsidian_vault_git_repo is not defined
#   tags: ['obsidian', 'vault']

- name: Verify Obsidian installation
  command: obsidian --version
  register: obsidian_version_check
  changed_when: false
  failed_when: false
  tags: ['obsidian', 'verify']

- name: Display installation results
  debug:
    msg:
      - "=== Obsidian Installation Complete ==="
      - "Status: {{ 'Successfully installed' if obsidian_version_check.rc == 0 else 'Installation may have failed' }}"
      - "Version: {{ obsidian_version }}"
      - "Architecture: {{ obsidian_arch }}"
      - "Vault location: {{ obsidian_vault_path }}"
      - "Vault source: {{ 'GitHub: ' + obsidian_vault_git_repo if obsidian_vault_git_repo is defined else 'New vault created' }}"
      - "Git sync: {{ 'Enabled (nightly at ' + obsidian_git_sync_hour | default('4') + ':' + obsidian_git_sync_minute | default('00') + ')' if obsidian_vault_git_repo is defined and obsidian_auto_git_sync | default(true) else 'Disabled' }}"
      - "Launch command: obsidian"
      - ""
      - "Next steps:"
      - "1. Launch Obsidian from Applications menu or run 'obsidian'"
      - "2. Your vault will open automatically"
      - "3. Sign into Obsidian Sync for real-time syncing (if desired)"
  tags: ['obsidian', 'info']